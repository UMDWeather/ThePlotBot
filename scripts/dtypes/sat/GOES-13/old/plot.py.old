#!/usr/bin/env python
""" GOES-13
    C. Martin - 5/2016
    convert satellite data in GINI format to PNG graphic
"""
import matplotlib as mpl
mpl.use('Agg')
import matplotlib.pyplot as plt
from mpl_toolkits.basemap import Basemap
import numpy as np
import sys
import datetime as dt
from metpy.io.gini import GiniFile
import os

# command line arguments
if len(sys.argv) != 3:
  print 'wrong usage:'
  print 'sat2png.py <path to gini file> <output dir>'
  sys.exit(1)

filename = sys.argv[1]
RootPlotDir = sys.argv[2]

# filename format
# /home/ldm/data/sat/20160516/20/GOES-13/2045Z_VIS_1km_EAST-CONUS-TIGE01_KNES_70082.satz.2016051620
# get info based off filename
satfile = filename.split('/')
date = satfile[5]
hour = satfile[6]
sat = satfile[7]
ginifile = satfile[8]
filesplit = ginifile.split('_')
timestamp = filesplit[0]
timestamp = dt.datetime.strptime(date+timestamp,"%Y%m%d%H%MZ")
dtype = filesplit[1]
res = filesplit[2]

# plot directory
plotDir = RootPlotDir+'/sat/'+sat
if not os.path.exists(plotDir):
    os.makedirs(plotDir)

# read in the satellite data
gini = GiniFile(filename)
gini_ds = gini.to_dataset()

var = {'IR':'IR','VIS':'Visible','WV':'WV','13.3':'IR','3.9':'IR'}

x = gini_ds.variables['x'][:]
y = gini_ds.variables['y'][:]
lons = gini_ds.variables['lon'][:]
lats = gini_ds.variables['lat'][:]

data_var = gini_ds.variables[var[dtype]]
proj_var = gini_ds.variables[data_var.grid_mapping]

# set up the map projection(s)
domains = ['CONUS','MidAtl']
domains = ['01','02']
#domains = ['CONUS'] # not working unless its correct projection...
for d in domains:
  if d == '02':
    m= Basemap(llcrnrlon=-84,llcrnrlat=35,urcrnrlon=-69,urcrnrlat=42, rsphere=(6371200.0,6371200.0),
            resolution='h',area_thresh=1000.,projection='lcc',
            lat_1=25,lat_2=25,lat_0=39.5,lon_0=-95)
  else:
    m= Basemap(width=5100000, height=3600000, rsphere=(6371200.0,6371200.0),
            resolution='l',area_thresh=1000.,projection='lcc',
            lat_1=25,lat_2=25,lat_0=39.5,lon_0=-95)
            #lat_1=39.5,lat_2=39.5,lat_0=39.5,lon_0=-98.35)
  xm, ym = m(lons,lats)
  fig = plt.figure(figsize=(14,11))
  ax=fig.add_axes([0.00,0.0,1.0,1.0])
  im = m.pcolormesh(xm,ym[::-1],data_var[:],cmap='Greys_r')
  #im = m.imshow(data_var[:], extent=(xm[0], xm[-1], ym[0], ym[-1]), origin='upper',
  #             cmap='Greys_r', norm=plt.Normalize(0, 255))
  m.drawcoastlines(color='red')
  m.drawcountries(color='red')
  m.drawstates(color='red')
  #plt.show()
  ax.annotate(sat+' '+dtype+' '+timestamp.strftime('%Y-%m-%d %H:%M'), xy=(0,1.0), xycoords=('axes fraction'), horizontalalignment='left',
              verticalalignment='bottom', color='red')
  ax.annotate('trowal.weather.umd.edu', xy=(1.0,1.0), xycoords=('axes fraction'), horizontalalignment='right',
              verticalalignment='bottom', color='red')
  cax = fig.add_axes([0,0,1, 0.05])
  cbar = plt.colorbar(im, cax=cax, orientation='horizontal')
  plt.savefig(plotDir+'/'+timestamp.strftime('%Y%m%d_%H%M')+'_'+dtype+'_'+d+'.png',bbox_inches='tight',pad_inches=0)
  plt.close('all')
